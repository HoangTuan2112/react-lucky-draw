{"version":3,"sources":["components/Wheel/index.js","components/Tab/SearchBar/SearchBar.js","components/Tab/ItemForm/ItemForm.jsx","components/Tab/Result.js","components/Customize/ColorPicker.js","components/Customize/Customize.js","components/NavigationBar.js","App.js","index.js"],"names":["Wheel","React","Component","constructor","props","super","this","state","selectedItem","selectItem","bind","items","length","spinning","Math","floor","random","onChange","onSelectItem","setState","setTimeout","console","log","render","wheelVars","spinDuration","localStorage","getItem","cssProperties","concat","wheelColor","fontColor","_jsxs","style","children","_jsx","className","lg","onClick","map","item","index","defaultProps","SearchBar","_ref","placeholder","data","filteredData","setFilteredData","useState","wordEntered","setWordEntered","id","type","value","event","searchWord","target","newFilter","filter","toLowerCase","includes","SearchIcon","CloseIcon","clearInput","slice","key","href","link","rel","ItemForm","setValue","variant","array","JSON","parse","randomIndex","currentIndex","uniqueItems","Set","s","trim","Array","from","class","join","e","newValue","split","rows","cols","Result","arguments","clearList","winners","winner","Container","styled","span","_templateObject","_taggedTemplateLiteral","ColorPicker","value2","onChange2","rest","Customize","updateState","state2","updateState2","Tabs","defaultActiveKey","Tab","eventKey","title","Box","sx","width","Slider","defaultValue","getAriaValueText","setItem","min","step","max","valueLabelDisplay","marks","label","NavigationBar","openModal","setOpenModal","cancelModal","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","Modal","show","onHide","size","Body","Footer","Button","App","setSpinning","setWinners","window","setWheelColor","setFontColor","setItems","newWinnerIndex","color","Header","closeButton","Title","indexOf","splice","stringify","fluid","Row","Col","md","selectedIndex","document","getElementById","disabled","addData","val","xxl","order","xl","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.426ed6e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Wheel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedItem: null,\r\n    };\r\n    this.selectItem = this.selectItem.bind(this);\r\n  }\r\n\r\n  selectItem() {\r\n    if (this.props.items.length === 0 || this.props.spinning === true) {\r\n      console.log(\"Can't spin a empty wheel or spinning wheel\");\r\n      return;\r\n    }\r\n    if (this.state.selectedItem === null) {\r\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\r\n      this.props.onChange(selectedItem);\r\n      if (this.props.onSelectItem) {\r\n        this.props.onSelectItem(selectedItem);\r\n      }\r\n      this.setState({ selectedItem });\r\n    } else {\r\n      this.setState({ selectedItem: null });\r\n      setTimeout(this.selectItem, 500);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedItem } = this.state;\r\n    const { items } = this.props;\r\n\r\n    const wheelVars = {\r\n      \"--nb-item\": items.length,\r\n      \"--selected-item\": selectedItem,\r\n    };\r\n    const spinning = selectedItem !== null ? \"spinning\" : \"\";\r\n    let spinDuration = localStorage.getItem(\"duration\");\r\n\r\n    let cssProperties = {};\r\n\r\n    cssProperties[\"--spinning-duration\"] = `${spinDuration}s`;\r\n    cssProperties[\"--wheel-color\"] = `${this.props.wheelColor}`;\r\n    cssProperties[\"--neutral-color\"] = `${this.props.fontColor}`;\r\n\r\n    if (cssProperties[\"--wheel-color\"] === \"null\")\r\n      cssProperties[\"--wheel-color\"] = \"#00FF00\";\r\n\r\n    if (cssProperties[\"--neutral-color\"] === \"null\")\r\n      cssProperties[\"--neutral-color\"] = \"#FFFF00\";\r\n\r\n    return (\r\n      <div style={cssProperties}>\r\n        <h1 className=\"text-center\">Click to spin</h1>\r\n        <div className=\"wheel-container\">\r\n          <div\r\n            lg={true}\r\n            className={`wheel ${spinning}`}\r\n            style={wheelVars}\r\n            onClick={this.selectItem}\r\n          >\r\n            {items.map((item, index) => (\r\n              <div\r\n                className=\"wheel-item\"\r\n                key={index}\r\n                style={{ \"--item-nb\": index }}\r\n              >\r\n                {item}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Define prop types\r\nWheel.propTypes = { items: PropTypes.array.isRequired };\r\n\r\n// Define default prop values\r\nWheel.defaultProps = {\r\n  items: [\r\n    \"Tuấn\",\r\n    \"Tâm\",\r\n    \"Thư\",\r\n    \"Thảo\",\r\n    \"Quỳnh\",\r\n    \"Linh\",\r\n    \"Hương\",\r\n\r\n  ],\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nfunction SearchBar({ placeholder, data }) {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [wordEntered, setWordEntered] = useState(\"\");\r\n\r\n  const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n    const newFilter = data.filter((value) => {\r\n      return value.toLowerCase().includes(searchWord.toLowerCase());\r\n    });\r\n\r\n    if (searchWord === \"\") {\r\n      setFilteredData([]);\r\n    } else {\r\n      setFilteredData(newFilter);\r\n    }\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setFilteredData([]);\r\n    setWordEntered(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"searchInputs\">\r\n        <input\r\n          id=\"inputSearchBar\"\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={wordEntered}\r\n          onChange={handleFilter}\r\n          className=\"form-control\"\r\n        />\r\n        <div className=\"searchIcon\">\r\n          {filteredData.length === 0 ? (\r\n            <SearchIcon />\r\n          ) : (\r\n            <CloseIcon id=\"clearBtn\" onClick={clearInput} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {filteredData.length !== 0 && (\r\n        <div className=\"dataResult\">\r\n          {filteredData.slice(0, 15).map((value, key) => {\r\n            return (\r\n              <a\r\n                className=\"dataItem\"\r\n                href={value.link}\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <p>{value} </p>\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import SearchBar from \"../SearchBar/SearchBar\";\r\nimport { useState } from \"react\";\r\n\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"./ItemForm.css\";\r\n\r\nfunction ItemForm(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [value, setValue] = useState(props.items);\r\n\r\n  function handleChange(e) {\r\n    const newValue = e.target.value.split(\"\\n\");\r\n    setValue(newValue);\r\n  }\r\n\r\n  // use Fisher–Yates Shuffle algorithm: https://bost.ocks.org/mike/shuffle/\r\n  function Shuffle() {\r\n    var array = JSON.parse(localStorage.getItem(\"itemsList\"));\r\n    let currentIndex = JSON.parse(localStorage.getItem(\"itemsList\")).length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex !== 0) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n    setValue(array);\r\n  }\r\n\r\n  function RemoveDuplicate() {\r\n    let uniqueItems = [...new Set(value.map((s) => s.trim()))];\r\n    setValue(Array.from(uniqueItems));\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-10\">\r\n      <div\r\n        className=\"\r\n      d-flex \r\n      flex-column \r\n      flex-sm-column \r\n      flex-md-column \r\n      flex-lg-row \r\n      justify-content-lg-start \r\n     \"\r\n      >\r\n        <button\r\n          id=\"shuffleButton\"\r\n          className=\"\r\n          btn btn-primary\r\n          flex-lg-grow-1 \r\n          me-lg-2\r\n          mb-md-2 \r\n          mb-sm-2 \r\n          mb-lg-0\r\n          mb-2\r\n          \"\r\n          variant=\"light\"\r\n          onClick={Shuffle}\r\n        >\r\n          <i className=\"bi bi-shuffle me-3\"></i>Shuffle\r\n        </button>\r\n        <button\r\n          id=\"removeButton\"\r\n          className=\"btn btn-primary flex-lg-grow-1\"\r\n          variant=\"light\"\r\n          onClick={RemoveDuplicate}\r\n        >\r\n          <i class=\"bi bi-trash me-3\"></i>\r\n          Remove duplicate\r\n        </button>\r\n      </div>\r\n      <SearchBar placeholder=\"Search...\" data={value} />\r\n      <textarea\r\n        id=\"inputTextArea\"\r\n        className=\"form-control w-100 mt-2 p-10\"\r\n        value={value?.join(\"\\n\")}\r\n        onChange={handleChange}\r\n        rows={17}\r\n        cols={15}\r\n      ></textarea>\r\n      <button\r\n        id=\"updateButton\"\r\n        className=\"btn btn-primary disableElement w-100 mt-2\"\r\n        onClick={() => {\r\n          props.onClick(value.filter((e) => e));\r\n        }}\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemForm;\r\n","import React from \"react\";\r\n\r\nexport default class Result extends React.Component {\r\n  clearList = () => {\r\n    this.props.onChange();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          id=\"clearListButton\"\r\n          className=\"btn btn-primary disableElement\"\r\n          onClick={this.clearList}\r\n        >\r\n          Clear the list\r\n        </button>\r\n        <ul>\r\n          {this.props.winners.map((winner, index) => (\r\n            <li key={index} className=\"mt-1\">\r\n              {winner}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// styled-components\r\nconst Container = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  width: 150px;\r\n  max-width: 150px;\r\n  padding: 4px 12px;\r\n  border: 1px solid #bfc9d9;\r\n  border-radius: 4px;\r\n\r\n  input[type=\"color\"] {\r\n    margin-right: 8px;\r\n    -webkit-appearance: none;\r\n    border: none;\r\n    width: auto;\r\n    height: auto;\r\n    cursor: pointer;\r\n    background: none;\r\n    &::-webkit-color-swatch-wrapper {\r\n      padding: 0;\r\n      width: 14px;\r\n      height: 14px;\r\n    }\r\n    &::-webkit-color-swatch {\r\n      border: 1px solid #bfc9d9;\r\n      border-radius: 4px;\r\n      padding: 0;\r\n    }\r\n  }\r\n\r\n  input[type=\"text\"] {\r\n    border: none;\r\n    width: 100%;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst ColorPicker = ({ value, value2, onChange, onChange2, ...rest }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"mt-3\">\r\n        <p>Choose wheel color:</p>\r\n        <Container>\r\n          <input type=\"color\" value={value} onChange={onChange} {...rest} />\r\n          <input type=\"text\" value={value} onChange={onChange} {...rest} />\r\n        </Container>\r\n      </div>\r\n      <div className=\"mt-3\">\r\n        <p>Choose font color:</p>\r\n        <Container>\r\n          <input type=\"color\" value={value2} onChange={onChange2} {...rest} />\r\n          <input type=\"text\" value={value2} onChange={onChange2} {...rest} />\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = {};\r\n\r\nexport default ColorPicker;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\n\r\nexport default function Customize() {\r\n  // wheel color\r\n  const [state, updateState] = useState(localStorage.getItem(\"wheelColor\"));\r\n\r\n  // font color\r\n  const [state2, updateState2] = useState(localStorage.getItem(\"fontColor\"));\r\n\r\n  const marks = [\r\n    {\r\n      value: 10,\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: 20,\r\n      label: \"20\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"30\",\r\n    },\r\n    {\r\n      value: 40,\r\n      label: \"40\",\r\n    },\r\n    {\r\n      value: 50,\r\n      label: \"50\",\r\n    },\r\n    {\r\n      value: 60,\r\n      label: \"60\",\r\n    },\r\n  ];\r\n\r\n  function valuetext(value) {\r\n    localStorage.setItem(\"duration\", value);\r\n    return `${value}`;\r\n  }\r\n\r\n  // handle wheel color input\r\n  const handleInput = (e) => {\r\n    updateState(e.target.value);\r\n    localStorage.setItem(\"wheelColor\", state);\r\n  };\r\n\r\n  // handle font color input\r\n  const handleInput2 = (e) => {\r\n    updateState2(e.target.value);\r\n    localStorage.setItem(\"fontColor\", state2);\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey=\"during-spin\"\r\n      id=\"uncontrolled-tab-example\"\r\n      className=\"mb-3\"\r\n    >\r\n      <Tab eventKey=\"during-spin\" title=\"During spin\">\r\n        <div className=\"mt-3\">\r\n          <p>Spin time (seconds) </p>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <Slider\r\n              aria-label=\"Custom marks\"\r\n              defaultValue={localStorage.getItem(\"duration\")}\r\n              getAriaValueText={valuetext}\r\n              min={1}\r\n              step={1}\r\n              max={60}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={marks}\r\n            />\r\n          </Box>\r\n        </div>\r\n      </Tab>\r\n      <Tab eventKey=\"appearance\" title=\"Appearance\">\r\n        <ColorPicker\r\n          value={state}\r\n          onChange={handleInput}\r\n          value2={state2}\r\n          onChange2={handleInput2}\r\n        />\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Customize from \"./Customize/Customize\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction NavigationBar(props) {\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  function cancelModal() {\r\n    setOpenModal(false);\r\n    props.onChange({\r\n      wheelColor: localStorage.getItem(\"wheelColor\"),\r\n      fontColor: localStorage.getItem(\"fontColor\"),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <h3 className=\"d-inline ms-2\">Lucky Draw</h3>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n          <Nav.Link onClick={() => setOpenModal(true)}>\r\n            <i className=\"bi bi-palette-fill me-2\"></i>\r\n            Customize\r\n          </Nav.Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Modal show={openModal} onHide={cancelModal} size=\"lg\">\r\n        <Modal.Body>\r\n          <Customize />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={cancelModal}>\r\n            Done\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import { React, useState } from \"react\";\r\n\r\nimport Wheel from \"./components/Wheel\";\r\nimport ItemForm from \"./components/Tab/ItemForm/ItemForm\";\r\nimport Result from \"./components/Tab/Result\";\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport { Button, Modal, Container, Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [spinning, setSpinning] = useState(false);\r\n\r\n  const [winners, setWinners] = useState([]);\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  if (window.localStorage.getItem(\"duration\") === null)\r\n    localStorage.setItem(\"duration\", 10);\r\n\r\n  if (window.localStorage.getItem(\"wheelColor\") === null)\r\n    localStorage.setItem(\"wheelColor\", \"#d38c12\");\r\n\r\n  if (window.localStorage.getItem(\"fontColor\") === null)\r\n    localStorage.setItem(\"fontColor\", \"#FFFFFF\");\r\n\r\n  const [wheelColor, setWheelColor] = useState(\r\n    window.localStorage.getItem(\"wheelColor\")\r\n  );\r\n\r\n  const [fontColor, setFontColor] = useState(\r\n    window.localStorage.getItem(\"fontColor\")\r\n  );\r\n\r\n  const [items, setItems] = useState(() => {\r\n    const value = window.localStorage.getItem(\"itemsList\");\r\n    return value !== null\r\n      ? JSON.parse(value)\r\n      : [\r\n        \"Tuấn\",\r\n        \"Tâm\",\r\n        \"Thư\",\r\n        \"Thảo\",\r\n        \"Quỳnh\",\r\n        \"Linh\",\r\n        \"Hương\",\r\n        ];\r\n  });\r\n\r\n  function changeWheelAndFontColor(color) {\r\n    setWheelColor(color.wheelColor);\r\n    setFontColor(color.fontColor);\r\n  }\r\n\r\n  function cancelModal() {\r\n    setOpenModal(false);\r\n  }\r\n\r\n  function addData(val) {\r\n    localStorage.setItem(\"itemsList\", JSON.stringify(val));\r\n    setItems(JSON.parse(window.localStorage.getItem(\"itemsList\")));\r\n  }\r\n\r\n  // use arrow function so we don't have to .bind(this) in constructor\r\n  function clearListEventHandler() {\r\n    setWinners([]);\r\n  }\r\n\r\n  function removeWinnerModal() {\r\n    const winner = winners[winners.length - 1];\r\n    const index = items.indexOf(winner);\r\n    items.splice(index, 1);\r\n    setItems(items);\r\n    setOpenModal(false);\r\n    console.log(`Removed ${winner} from entries.`);\r\n    localStorage.setItem(\"itemsList\", JSON.stringify(items));\r\n  }\r\n\r\n  function selectResultEventHandler(data) {\r\n    if (items.length > 0 && spinning !== true) {\r\n      var selectedIndex = data;\r\n\r\n      // set this state to disable tab and wheel click when spinning\r\n      setSpinning(true);\r\n\r\n      // when spinning disable update player\r\n      document.getElementById(\"inputTextArea\").disabled = true;\r\n      document.getElementById(\"updateButton\").disabled = true;\r\n      document.getElementById(\"inputSearchBar\").disabled = true;\r\n      document.getElementById(\"shuffleButton\").disabled = true;\r\n      document.getElementById(\"removeButton\").disabled = true;\r\n      document.getElementById(\"clearListButton\").disabled = true;\r\n\r\n      // after done spinning enable update player\r\n      setTimeout(() => {\r\n        setSpinning(false);\r\n        document.getElementById(\"inputTextArea\").disabled = false;\r\n        document.getElementById(\"updateButton\").disabled = false;\r\n        document.getElementById(\"inputSearchBar\").disabled = false;\r\n        document.getElementById(\"shuffleButton\").disabled = false;\r\n        document.getElementById(\"removeButton\").disabled = false;\r\n        document.getElementById(\"clearListButton\").disabled = false;\r\n      }, window.localStorage.getItem(\"duration\") * 1000);\r\n\r\n      setTimeout(() => {\r\n        setWinners(winners.concat(items[selectedIndex]));\r\n      }, window.localStorage.getItem(\"duration\") * 1000);\r\n\r\n      setTimeout(() => {\r\n        setOpenModal(true);\r\n      }, window.localStorage.getItem(\"duration\") * 1000);\r\n    }\r\n  }\r\n\r\n  let newWinnerIndex = winners.length - 1;\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar onChange={changeWheelAndFontColor} />\r\n      <Modal show={openModal} onHide={cancelModal} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>We have a winner 🎉</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{winners[newWinnerIndex]}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={cancelModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={removeWinnerModal}>\r\n            Remove\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col className=\"mt-4\" lg=\"6\" md=\"auto\">\r\n            <Wheel\r\n              items={items}\r\n              onChange={selectResultEventHandler}\r\n              spinning={spinning}\r\n              wheelColor={wheelColor}\r\n              fontColor={fontColor}\r\n            />\r\n          </Col>\r\n          <Col lg=\"3\" md=\"auto\">\r\n            <div id=\"Tabs\" className=\"mt-4\">\r\n              <Tabs defaultActiveKey=\"entries\" className=\"mb-3\">\r\n                <Tab eventKey=\"entries\" title=\"Entries\">\r\n                  <ItemForm\r\n                    items={items}\r\n                    winners={winners}\r\n                    onClick={(value) => addData(value)}\r\n                    key={items}\r\n                  />\r\n                </Tab>\r\n                <Tab eventKey=\"results\" title=\"Results\">\r\n                  <Result onChange={clearListEventHandler} winners={winners} />\r\n                </Tab>\r\n              </Tabs>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            className=\"mt-4\"\r\n            xxl={{ span: 3, order: \"first\" }}\r\n            xl={{ span: 3, order: \"first\" }}\r\n            lg={{ span: 3, order: \"first\" }}\r\n            md={{ order: \"last\" }}\r\n          ></Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n"],"sourceRoot":""}